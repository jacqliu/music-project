/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.thp.psmove;

public class psmoveapiJNI {

    static {
        try {
            System.loadLibrary("psmove_java");
        } catch (UnsatisfiedLinkError e) {
            System.err.println("Failed to load native 'psmove' library: " + e);
            System.exit(1);
        }
    }

  public final static native void PSMove_Ext_Device_Info_dev_id_set(long jarg1, PSMove_Ext_Device_Info jarg1_, int jarg2);
  public final static native int PSMove_Ext_Device_Info_dev_id_get(long jarg1, PSMove_Ext_Device_Info jarg1_);
  public final static native void PSMove_Ext_Device_Info_dev_info_set(long jarg1, PSMove_Ext_Device_Info jarg1_, long jarg2);
  public final static native long PSMove_Ext_Device_Info_dev_info_get(long jarg1, PSMove_Ext_Device_Info jarg1_);
  public final static native long new_PSMove_Ext_Device_Info();
  public final static native void delete_PSMove_Ext_Device_Info(long jarg1);
  public final static native void _PSMove_3AxisVector_x_set(long jarg1, _PSMove_3AxisVector jarg1_, float jarg2);
  public final static native float _PSMove_3AxisVector_x_get(long jarg1, _PSMove_3AxisVector jarg1_);
  public final static native void _PSMove_3AxisVector_y_set(long jarg1, _PSMove_3AxisVector jarg1_, float jarg2);
  public final static native float _PSMove_3AxisVector_y_get(long jarg1, _PSMove_3AxisVector jarg1_);
  public final static native void _PSMove_3AxisVector_z_set(long jarg1, _PSMove_3AxisVector jarg1_, float jarg2);
  public final static native float _PSMove_3AxisVector_z_get(long jarg1, _PSMove_3AxisVector jarg1_);
  public final static native void _PSMove_3AxisVector_v_set(long jarg1, _PSMove_3AxisVector jarg1_, long jarg2);
  public final static native long _PSMove_3AxisVector_v_get(long jarg1, _PSMove_3AxisVector jarg1_);
  public final static native long new__PSMove_3AxisVector();
  public final static native void delete__PSMove_3AxisVector(long jarg1);
  public final static native void _PSMove_3AxisTransform_row0_set(long jarg1, _PSMove_3AxisTransform jarg1_, long jarg2);
  public final static native long _PSMove_3AxisTransform_row0_get(long jarg1, _PSMove_3AxisTransform jarg1_);
  public final static native void _PSMove_3AxisTransform_row1_set(long jarg1, _PSMove_3AxisTransform jarg1_, long jarg2);
  public final static native long _PSMove_3AxisTransform_row1_get(long jarg1, _PSMove_3AxisTransform jarg1_);
  public final static native void _PSMove_3AxisTransform_row2_set(long jarg1, _PSMove_3AxisTransform jarg1_, long jarg2);
  public final static native long _PSMove_3AxisTransform_row2_get(long jarg1, _PSMove_3AxisTransform jarg1_);
  public final static native void _PSMove_3AxisTransform_m_set(long jarg1, _PSMove_3AxisTransform jarg1_, long jarg2);
  public final static native long _PSMove_3AxisTransform_m_get(long jarg1, _PSMove_3AxisTransform jarg1_);
  public final static native long new__PSMove_3AxisTransform();
  public final static native void delete__PSMove_3AxisTransform(long jarg1);
  public final static native int psmove_init(int jarg1);
  public final static native void psmove_set_remote_config(int jarg1);
  public final static native int psmove_count_connected();
  public final static native long psmove_connect();
  public final static native long psmove_connect_by_id(int jarg1);
  public final static native int psmove_connection_type(long jarg1, PSMove jarg1_);
  public final static native int psmove_is_remote(long jarg1, PSMove jarg1_);
  public final static native String psmove_get_serial(long jarg1, PSMove jarg1_);
  public final static native int psmove_pair(long jarg1, PSMove jarg1_);
  public final static native int psmove_pair_custom(long jarg1, PSMove jarg1_, String jarg2);
  public final static native void psmove_set_rate_limiting(long jarg1, PSMove jarg1_, int jarg2);
  public final static native void psmove_set_leds(long jarg1, PSMove jarg1_, short jarg2, short jarg3, short jarg4);
  public final static native int psmove_set_led_pwm_frequency(long jarg1, PSMove jarg1_, long jarg2);
  public final static native void psmove_set_rumble(long jarg1, PSMove jarg1_, short jarg2);
  public final static native int psmove_update_leds(long jarg1, PSMove jarg1_);
  public final static native int psmove_poll(long jarg1, PSMove jarg1_);
  public final static native int psmove_get_ext_data(long jarg1, PSMove jarg1_, long jarg2);
  public final static native int psmove_send_ext_data(long jarg1, PSMove jarg1_, long jarg2, short jarg3);
  public final static native long psmove_get_buttons(long jarg1, PSMove jarg1_);
  public final static native void psmove_get_button_events(long jarg1, PSMove jarg1_, long jarg2, long jarg3);
  public final static native int psmove_is_ext_connected(long jarg1, PSMove jarg1_);
  public final static native int psmove_get_ext_device_info(long jarg1, PSMove jarg1_, long jarg2, PSMove_Ext_Device_Info jarg2_);
  public final static native int psmove_get_battery(long jarg1, PSMove jarg1_);
  public final static native int psmove_get_temperature(long jarg1, PSMove jarg1_);
  public final static native float psmove_get_temperature_in_celsius(long jarg1, PSMove jarg1_);
  public final static native short psmove_get_trigger(long jarg1, PSMove jarg1_);
  public final static native void psmove_get_accelerometer(long jarg1, PSMove jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void psmove_get_gyroscope(long jarg1, PSMove jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void psmove_get_magnetometer(long jarg1, PSMove jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void psmove_get_accelerometer_frame(long jarg1, PSMove jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void psmove_get_gyroscope_frame(long jarg1, PSMove jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void psmove_get_magnetometer_vector(long jarg1, PSMove jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void psmove_get_magnetometer_3axisvector(long jarg1, PSMove jarg1_, long jarg2, _PSMove_3AxisVector jarg2_);
  public final static native void psmove_reset_magnetometer_calibration(long jarg1, PSMove jarg1_);
  public final static native void psmove_save_magnetometer_calibration(long jarg1, PSMove jarg1_);
  public final static native float psmove_get_magnetometer_calibration_range(long jarg1, PSMove jarg1_);
  public final static native int psmove_has_calibration(long jarg1, PSMove jarg1_);
  public final static native void psmove_dump_calibration(long jarg1, PSMove jarg1_);
  public final static native void psmove_enable_orientation(long jarg1, PSMove jarg1_, int jarg2);
  public final static native int psmove_has_orientation(long jarg1, PSMove jarg1_);
  public final static native void psmove_get_orientation(long jarg1, PSMove jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void psmove_reset_orientation(long jarg1, PSMove jarg1_);
  public final static native void psmove_set_orientation_fusion_type(long jarg1, PSMove jarg1_, int jarg2);
  public final static native void psmove_set_calibration_pose(long jarg1, PSMove jarg1_, int jarg2);
  public final static native void psmove_set_calibration_transform(long jarg1, PSMove jarg1_, long jarg2, _PSMove_3AxisTransform jarg2_);
  public final static native void psmove_get_identity_gravity_calibration_direction(long jarg1, PSMove jarg1_, long jarg2, _PSMove_3AxisVector jarg2_);
  public final static native void psmove_get_transformed_gravity_calibration_direction(long jarg1, PSMove jarg1_, long jarg2, _PSMove_3AxisVector jarg2_);
  public final static native void psmove_get_identity_magnetometer_calibration_direction(long jarg1, PSMove jarg1_, long jarg2, _PSMove_3AxisVector jarg2_);
  public final static native void psmove_get_transformed_magnetometer_calibration_direction(long jarg1, PSMove jarg1_, long jarg2, _PSMove_3AxisVector jarg2_);
  public final static native void psmove_set_magnetometer_calibration_direction(long jarg1, PSMove jarg1_, long jarg2, _PSMove_3AxisVector jarg2_);
  public final static native void psmove_set_sensor_data_basis(long jarg1, PSMove jarg1_, int jarg2);
  public final static native void psmove_set_sensor_data_transform(long jarg1, PSMove jarg1_, long jarg2, _PSMove_3AxisTransform jarg2_);
  public final static native void psmove_get_transformed_magnetometer_direction(long jarg1, PSMove jarg1_, long jarg2, _PSMove_3AxisVector jarg2_);
  public final static native void psmove_get_transformed_accelerometer_frame_3axisvector(long jarg1, PSMove jarg1_, int jarg2, long jarg3, _PSMove_3AxisVector jarg3_);
  public final static native void psmove_get_transformed_accelerometer_frame_direction(long jarg1, PSMove jarg1_, int jarg2, long jarg3, _PSMove_3AxisVector jarg3_);
  public final static native void psmove_get_transformed_gyroscope_frame_3axisvector(long jarg1, PSMove jarg1_, int jarg2, long jarg3, _PSMove_3AxisVector jarg3_);
  public final static native void psmove_disconnect(long jarg1, PSMove jarg1_);
  public final static native void psmove_reinit();
  public final static native int psmove_util_get_ticks();
  public final static native String psmove_util_get_data_dir();
  public final static native String psmove_util_get_file_path(String jarg1);
  public final static native String psmove_util_get_system_file_path(String jarg1);
  public final static native int psmove_util_get_env_int(String jarg1);
  public final static native String psmove_util_get_env_string(String jarg1);
  public final static native int PSMove_connection_type_get(long jarg1, PSMove jarg1_);
  public final static native int PSMove_ax_get(long jarg1, PSMove jarg1_);
  public final static native int PSMove_ay_get(long jarg1, PSMove jarg1_);
  public final static native int PSMove_az_get(long jarg1, PSMove jarg1_);
  public final static native int PSMove_gx_get(long jarg1, PSMove jarg1_);
  public final static native int PSMove_gy_get(long jarg1, PSMove jarg1_);
  public final static native int PSMove_gz_get(long jarg1, PSMove jarg1_);
  public final static native int PSMove_mx_get(long jarg1, PSMove jarg1_);
  public final static native int PSMove_my_get(long jarg1, PSMove jarg1_);
  public final static native int PSMove_mz_get(long jarg1, PSMove jarg1_);
  public final static native long new_PSMove__SWIG_0();
  public final static native long new_PSMove__SWIG_1(int jarg1);
  public final static native void PSMove_get_accelerometer_frame(long jarg1, PSMove jarg1_, int jarg2, float[] jarg3, float[] jarg4, float[] jarg5);
  public final static native void PSMove_get_gyroscope_frame(long jarg1, PSMove jarg1_, int jarg2, float[] jarg3, float[] jarg4, float[] jarg5);
  public final static native void PSMove_get_magnetometer_vector(long jarg1, PSMove jarg1_, float[] jarg2, float[] jarg3, float[] jarg4);
  public final static native void PSMove_enable_orientation(long jarg1, PSMove jarg1_, int jarg2);
  public final static native int PSMove_has_orientation(long jarg1, PSMove jarg1_);
  public final static native int PSMove_has_calibration(long jarg1, PSMove jarg1_);
  public final static native void PSMove_get_orientation(long jarg1, PSMove jarg1_, float[] jarg2, float[] jarg3, float[] jarg4, float[] jarg5);
  public final static native void PSMove_reset_orientation(long jarg1, PSMove jarg1_);
  public final static native void PSMove_set_leds(long jarg1, PSMove jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void PSMove_set_rumble(long jarg1, PSMove jarg1_, int jarg2);
  public final static native int PSMove_update_leds(long jarg1, PSMove jarg1_);
  public final static native void PSMove_set_rate_limiting(long jarg1, PSMove jarg1_, int jarg2);
  public final static native int PSMove_pair(long jarg1, PSMove jarg1_);
  public final static native int PSMove_pair_custom(long jarg1, PSMove jarg1_, String jarg2);
  public final static native String PSMove_get_serial(long jarg1, PSMove jarg1_);
  public final static native int PSMove_is_remote(long jarg1, PSMove jarg1_);
  public final static native int PSMove_poll(long jarg1, PSMove jarg1_);
  public final static native int PSMove_get_buttons(long jarg1, PSMove jarg1_);
  public final static native void PSMove_get_button_events(long jarg1, PSMove jarg1_, long[] jarg2, long[] jarg3);
  public final static native int PSMove_get_battery(long jarg1, PSMove jarg1_);
  public final static native int PSMove_get_temperature(long jarg1, PSMove jarg1_);
  public final static native float PSMove_get_temperature_in_celsius(long jarg1, PSMove jarg1_);
  public final static native int PSMove_get_trigger(long jarg1, PSMove jarg1_);
  public final static native void delete_PSMove(long jarg1);
  public final static native int init(int jarg1);
  public final static native void set_remote_config(int jarg1);
  public final static native int count_connected();
  public final static native void reinit();
}
