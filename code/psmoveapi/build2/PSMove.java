/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.thp.psmove;

public class PSMove {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected PSMove(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PSMove obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        psmoveapiJNI.delete_PSMove(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public int getConnection_type() {
    return psmoveapiJNI.PSMove_connection_type_get(swigCPtr, this);
  }

  public int getAx() {
    return psmoveapiJNI.PSMove_ax_get(swigCPtr, this);
  }

  public int getAy() {
    return psmoveapiJNI.PSMove_ay_get(swigCPtr, this);
  }

  public int getAz() {
    return psmoveapiJNI.PSMove_az_get(swigCPtr, this);
  }

  public int getGx() {
    return psmoveapiJNI.PSMove_gx_get(swigCPtr, this);
  }

  public int getGy() {
    return psmoveapiJNI.PSMove_gy_get(swigCPtr, this);
  }

  public int getGz() {
    return psmoveapiJNI.PSMove_gz_get(swigCPtr, this);
  }

  public int getMx() {
    return psmoveapiJNI.PSMove_mx_get(swigCPtr, this);
  }

  public int getMy() {
    return psmoveapiJNI.PSMove_my_get(swigCPtr, this);
  }

  public int getMz() {
    return psmoveapiJNI.PSMove_mz_get(swigCPtr, this);
  }

  public PSMove() {
    this(psmoveapiJNI.new_PSMove__SWIG_0(), true);
  }

  public PSMove(int id) {
    this(psmoveapiJNI.new_PSMove__SWIG_1(id), true);
  }

  public void get_accelerometer_frame(Frame frame, float[] arg1, float[] arg2, float[] arg3) {
    psmoveapiJNI.PSMove_get_accelerometer_frame(swigCPtr, this, frame.swigValue(), arg1, arg2, arg3);
  }

  public void get_gyroscope_frame(Frame frame, float[] arg1, float[] arg2, float[] arg3) {
    psmoveapiJNI.PSMove_get_gyroscope_frame(swigCPtr, this, frame.swigValue(), arg1, arg2, arg3);
  }

  public void get_magnetometer_vector(float[] arg0, float[] arg1, float[] arg2) {
    psmoveapiJNI.PSMove_get_magnetometer_vector(swigCPtr, this, arg0, arg1, arg2);
  }

  public void enable_orientation(int enabled) {
    psmoveapiJNI.PSMove_enable_orientation(swigCPtr, this, enabled);
  }

  public int has_orientation() {
    return psmoveapiJNI.PSMove_has_orientation(swigCPtr, this);
  }

  public int has_calibration() {
    return psmoveapiJNI.PSMove_has_calibration(swigCPtr, this);
  }

  public void get_orientation(float[] arg0, float[] arg1, float[] arg2, float[] arg3) {
    psmoveapiJNI.PSMove_get_orientation(swigCPtr, this, arg0, arg1, arg2, arg3);
  }

  public void reset_orientation() {
    psmoveapiJNI.PSMove_reset_orientation(swigCPtr, this);
  }

  public void set_leds(int r, int g, int b) {
    psmoveapiJNI.PSMove_set_leds(swigCPtr, this, r, g, b);
  }

  public void set_rumble(int rumble) {
    psmoveapiJNI.PSMove_set_rumble(swigCPtr, this, rumble);
  }

  public int update_leds() {
    return psmoveapiJNI.PSMove_update_leds(swigCPtr, this);
  }

  public void set_rate_limiting(int enabled) {
    psmoveapiJNI.PSMove_set_rate_limiting(swigCPtr, this, enabled);
  }

  public int pair() {
    return psmoveapiJNI.PSMove_pair(swigCPtr, this);
  }

  public int pair_custom(String btaddr) {
    return psmoveapiJNI.PSMove_pair_custom(swigCPtr, this, btaddr);
  }

  public String get_serial() {
    return psmoveapiJNI.PSMove_get_serial(swigCPtr, this);
  }

  public int is_remote() {
    return psmoveapiJNI.PSMove_is_remote(swigCPtr, this);
  }

  public int poll() {
    return psmoveapiJNI.PSMove_poll(swigCPtr, this);
  }

  public int get_buttons() {
    return psmoveapiJNI.PSMove_get_buttons(swigCPtr, this);
  }

  public void get_button_events(long[] arg0, long[] arg1) {
    psmoveapiJNI.PSMove_get_button_events(swigCPtr, this, arg0, arg1);
  }

  public int get_battery() {
    return psmoveapiJNI.PSMove_get_battery(swigCPtr, this);
  }

  public int get_temperature() {
    return psmoveapiJNI.PSMove_get_temperature(swigCPtr, this);
  }

  public float get_temperature_in_celsius() {
    return psmoveapiJNI.PSMove_get_temperature_in_celsius(swigCPtr, this);
  }

  public int get_trigger() {
    return psmoveapiJNI.PSMove_get_trigger(swigCPtr, this);
  }

}
